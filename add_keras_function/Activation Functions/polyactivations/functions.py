from __future__ import absolute_import
import keras.backend as k
import keras.activations
import keras.utils.generic_utils
import sys, inspect

__name = 'polyactivations.functions'

#class Functions( object ):

def poly(x):
#    return 3.170e-10*x**3 + 0.118*x**2 + 0.5*x #Large CNN Error: 0.72%
#    return -0.0045517573841717*x**4 + 3.16969745442445e-10*x**3 + 0.124586499449742*x**2 + 0.499999999324839*x #Large CNN Error: 0.81%, large interval
#    return 2.43073534847195e-15*x**3 + 0.00115097145651616*x**2 + 0.499999999663329*x
#    return 2.431e-15*x**3 + 0.001*x**2 + 0.5*x
#    return 2.43073534847195e-15*x**3 + 0.00115097145651616*x**2 + 0.499999999663329*x# nom = 17
#    return 3.170e-10*x**3 + 0.118*x**2 + 0.5*x #Large CNN Error: 0.73%
#    return 3.12573413124645e-5*x**3 + 0.124770932563053*x**2 + 0.499997934232214*x#Large CNN Error: 0.74%
#    return -3.88169613851968e-7*x**3 + 0.00109815923445544*x**2 + 0.545524975307702*x
 #changed to old	 norm, num = 8
#    return -7.68947198689792e-9*x**4 + 2.5289537540636e-15*x**3 + 0.00190772692889526*x**2 + 0.499999999663325*x # large interval, num = 9
#    return 1.13549254517697e-13*x**6 - 7.69494176156842e-19*x**5 - 2.26197192849112e-8*x**4 + 1.09003648375723e-13*x**3 + 0.00251686354209183*x**2 + 0.49999999363442*x #largeinterval, num = 10
    return 2.43073534847195e-15*x**3 + 0.00115097145651616*x**2 + 0.499999999663329*x  #255
#    return 1.75611166480534e-15*x**3 + 0.000978325738038737*x**2 + 0.499999999663346*x + 63.8846526411538 #bad,l=255 
#    return -6.28080352801176e-19*x**8 + 5.60286905360136e-23*x**7 + 1.96721967756616e-13*x**6 - 1.39032613254136e-17*x**5 - 2.59522235444036e-8*x**4 + 1.28390943654058e-12*x**3 + 0.00254886018261248*x**2 + 0.499999934645819*x#nom = 11, l=300, new paper
#    return -1.95921784711324e-18*x**8 + 1.48557053290937e-22*x**7 + 4.43361758804298e-13*x**6 - 2.66341005235617e-17*x**5 - 4.22588618653201e-8*x**4 + 1.77702865448205e-12*x**3 + 0.0029986590383104*x**2 + 0.499999934645986*x#nom = 12, l=255, new paper
#    return 3.170e-10*x**3 + 0.118*x**2 + 0.5*x #nom = 13, l=300, new new structure
    #return 1.75611166480534e-15*x**3 + 0.000978325738038737*x**2 + 0.499999999663346*x#nom = 16, l=300,

#    return -0.000804322377498516*x**3 + 0.119322409113693*x**2 + 0.500770011342504*x#l=1, nom=20


def poly1(x):
    return x

def noAct(x):
    return x

def polySig_old(x):
#    return 5.26833499441601e-15*x**2 + 0.00195665147607747*x + 0.499999999663346 #nom = 14, l=300, FC with sigmoid
#    return 3.03470254804307e-14*x**2 + 0.00469596354258593*x + 0.499999999663331 #nom = 15, l=125, FC with sigmoid
#    return -9.11950052492631e-6*x**2 + 0.00614842133696646*x + 0.545473865704071
    return -1.42389064892201e-5*x**2 + 0.00768450300028246*x + 0.545440950384649


###############################################################################################
#Interval = [-1,1]
#presicion = 10
#Legendre:
def polySig0(x):
    return 0.424413181578472*x**2 + 0.500000000000002*x + 0.106103295394586

#Chebyshev:
def polySig1(x):
    return 0.468749999999998*x**2 + 0.5*x + 0.0937500000000005

#numerically:
def polySig2(x):
    return 0.315470780693249*x**2 + 0.499999999999999*x + 0.192786781966974

#Legendre:
def polySig3(x):
    return -7.80955253165169e-13*x**3 + 0.424413181578472*x**2 + 0.500000000000588*x + 0.106103295394586

#Chebyshev:
def polySig4(x):
    return -3.31027786302838e-15*x**3 + 0.468749999999998*x**2 + 0.500000000000002*x + 0.0937500000000005

#numerically:
def polySig5(x):
    return -6.43780090022831e-10*x**3 + 0.315470780693249*x**2 + 0.500000000491438*x + 0.192786781966974

#Legendre:
def polySig6(x):
    return -0.339530545242236*x**4 - 7.80955253165169e-13*x**3 + 0.763943726819237*x**2 + 0.500000000000588*x + 0.0636619772400626

#Chebyshev:
def polySig7(x):
    return -0.410156250000007*x**4 - 3.31027786302838e-15*x**3 + 0.820312500000005*x**2 + 0.500000000000002*x + 0.0585937499999998

#numerically:
#def polySig8(x):
#    return -0.138407221886424*x**4 - 6.43780090022831e-10*x**3 + 0.499322751945291*x**2 + 0.500000000491438*x + 0.137266103361936
###############################################################################################

###############################################################################################
#Interval = [-10,10]
#presicion = 10
#Legendre-l10-d2:
def polyReLU0(x):
    return 0.0424413181577896*x**2 + 0.500000000000008*x + 1.06103295394526

#Chebyshev-l10-d2:
def polyReLU1(x):
    return 0.046875*x**2 + 0.5*x + 0.9375

#numerically-l10-d2:
def polyReLU2(x):
    return 0.0315470780296102*x**2 + 0.500000000025418*x + 1.92786782237365

#Legendre-l10-d3:
def polyReLU3(x):
    return 1.92306028977155e-13*x**3 + 0.0424413181577896*x**2 + 0.499999999985585*x + 1.06103295394526

#Chebyshev-l10-d3:
def polyReLU4(x):
    return -1.45320716794605e-16*x**3 + 0.046875*x**2 + 0.500000000000009*x + 0.9375

#numerically-l10-d3:
def polyReLU5(x):
    return -6.4377830710805e-12*x**3 + 0.0315470780296102*x**2 + 0.500000000516856*x + 1.92786782237365

#Legendre-l10-d4:
def polyReLU6(x):
    return -0.000339530545219623*x**4 + 1.92306028977155e-13*x**3 + 0.0763943726797794*x**2 + 0.499999999985585*x + 0.636619772415138

#Chebyshev-l10-d4:
def polyReLU7(x):
    return -0.000410156249999997*x**4 - 1.45320716794605e-16*x**3 + 0.0820312499999998*x**2 + 0.500000000000009*x + 0.585937500000002

#numerically-l10-d4:
def polyReLU8(x):
    return -0.00013840720540371*x**4 - 6.4377830710805e-12*x**3 + 0.0499322729581999*x**2 + 0.500000000516856*x + 1.37266110288321

#Interval = [-20,20]
#presicion = 10
#Legendre-l20-d2:
def polyReLU9(x):
    return 0.0212206590788935*x**2 + 0.500000000000006*x + 2.12206590789051

#Chebyshev-l20-d2:
def polyReLU10(x):
    return 0.0234375000000001*x**2 + 0.500000000000002*x + 1.87499999999998

#numerically-l20-d2:
def polyReLU11(x):
    return 0.0157735390148031*x**2 + 0.500000000025419*x + 3.85573564474786

#Legendre-l20-d3:
def polyReLU12(x):
    return 4.86825870594651e-14*x**3 + 0.0212206590788935*x**2 + 0.499999999985402*x + 2.12206590789051

#Chebyshev-l20-d3:
def polyReLU13(x):
    return -8.28734433770262e-17*x**3 + 0.0234375000000001*x**2 + 0.500000000000022*x + 1.87499999999998

#numerically-l20-d3:
def polyReLU14(x):
    return -1.609533296184e-12*x**3 + 0.0157735390148031*x**2 + 0.500000000516883*x + 3.85573564474786

#Legendre-l20-d4:
def polyReLU15(x):
    return -4.24413181518242e-5*x**4 + 4.86825870594651e-14*x**3 + 0.0381971863396349*x**2 + 0.499999999985402*x + 1.27323954484253

#Chebyshev-l20-d4:
def polyReLU16(x):
    return -5.1269531249995e-5*x**4 - 8.28734433770262e-17*x**3 + 0.0410156249999984*x**2 + 0.500000000000022*x + 1.17187500000005

#numerically-l20-d4:
def polyReLU17(x):
    return -1.73009006754567e-5*x**4 - 1.609533296184e-12*x**3 + 0.0249661364790938*x**2 + 0.500000000516883*x + 2.74532220576754

#Interval = [-30,30]
#presicion = 10
#Legendre-l30-d2:
def polyReLU18(x):
    return 0.0141471060527308*x**2 + 0.499999999999995*x + 3.18309886181691

#Chebyshev-l30-d2:
def polyReLU19(x):
    return 0.0156249999999999*x**2 + 0.5*x + 2.81250000000006

#numerically-l30-d2:
def polyReLU20(x):
    return 0.010515692676537*x**2 + 0.500000000025418*x + 5.78360346712081

#Legendre-l30-d3:
def polyReLU21(x):
    return -1.82926449851478e-14*x**3 + 0.0141471060527308*x**2 + 0.500000000012343*x + 3.18309886181691

#Chebyshev-l30-d3:
def polyReLU22(x):
    return 5.24051790241013e-18*x**3 + 0.0156249999999999*x**2 + 0.499999999999997*x + 2.81250000000006

#numerically-l30-d3:
def polyReLU23(x):
    return -7.15334701013921e-13*x**3 + 0.010515692676537*x**2 + 0.500000000516873*x + 5.78360346712081

#Legendre-l30-d4:
def polyReLU24(x):
    return -1.25752053826656e-5*x**4 - 1.82926449851478e-14*x**3 + 0.0254647908971576*x**2 + 0.500000000012343*x + 1.9098593168221

#Chebyshev-l30-d4:
def polyReLU25(x):
    return -1.51909722222201e-5*x**4 + 5.24051790241013e-18*x**3 + 0.0273437499999982*x**2 + 0.499999999999997*x + 1.75781250000022

#numerically-l30-d4:
def polyReLU26(x):
    return -5.12619279273254e-6*x**4 - 7.15334701013921e-13*x**3 + 0.0166440909860699*x**2 + 0.500000000516873*x + 4.11798330864864

#Interval = [-40,40]
#presicion = 10
#Legendre-l40-d2:
def polyReLU27(x):
    return 0.0106103295394464*x**2 + 0.500000000000008*x + 4.24413181578161

#Chebyshev-l40-d2:
def polyReLU28(x):
    return 0.0117187500000002*x**2 + 0.5*x + 3.74999999999988

#numerically-l40-d2:
def polyReLU29(x):
    return 0.00788676950740176*x**2 + 0.500000000025417*x + 7.71147128949551

#Legendre-l40-d3:
def polyReLU30(x):
    return 1.20650928516575e-14*x**3 + 0.0106103295394464*x**2 + 0.49999999998553*x + 4.24413181578161

#Chebyshev-l40-d3:
def polyReLU31(x):
    return -1.37777586367766e-17*x**3 + 0.0117187500000002*x**2 + 0.500000000000013*x + 3.74999999999988

#numerically-l40-d3:
def polyReLU32(x):
    return -4.02313690427208e-13*x**3 + 0.00788676950740176*x**2 + 0.500000000516796*x + 7.71147128949551

#Legendre-l40-d4:
def polyReLU33(x):
    return -5.30516476904519e-6*x**4 + 1.20650928516575e-14*x**3 + 0.0190985931699248*x**2 + 0.49999999998553*x + 2.54647908966535

#Chebyshev-l40-d4:
def polyReLU34(x):
    return -6.40869140625099e-6*x**4 - 1.37777586367766e-17*x**3 + 0.0205078125000016*x**2 + 0.500000000000013*x + 2.34374999999964

#numerically-l40-d4:
def polyReLU35(x):
    return -2.16261258442441e-6*x**4 - 4.02313690427208e-13*x**3 + 0.0124830682395308*x**2 + 0.500000000516796*x + 5.4906444115427

#Interval = [-50,50]
#presicion = 10
#Legendre-l50-d2:
def polyReLU36(x):
    return 0.00848826363160843*x**2 + 0.499999999999997*x + 5.30516476971423

#Chebyshev-l50-d2:
def polyReLU37(x):
    return 0.00937499999999984*x**2 + 0.499999999999999*x + 4.68750000000013

#numerically-l50-d2:
def polyReLU38(x):
    return 0.00630941560592246*x**2 + 0.500000000025418*x + 9.63933911186752

#Legendre-l50-d3:
def polyReLU39(x):
    return -4.98451502346397e-15*x**3 + 0.00848826363160843*x**2 + 0.500000000009343*x + 5.30516476971423

#Chebyshev-l50-d3:
def polyReLU40(x):
    return 2.43067700401272e-18*x**3 + 0.00937499999999984*x**2 + 0.499999999999996*x + 4.68750000000013

#numerically-l50-d3:
def polyReLU41(x):
    return -2.57495450720979e-13*x**3 + 0.00630941560592246*x**2 + 0.500000000516826*x + 9.63933911186752

#Legendre-l50-d4:
def polyReLU42(x):
    return -2.71624436265527e-6*x**4 - 4.98451502346397e-15*x**3 + 0.0152788745382665*x**2 + 0.500000000009343*x + 3.18309886138076

#Chebyshev-l50-d4:
def polyReLU43(x):
    return -3.2812499999996e-6*x**4 + 2.43067700401272e-18*x**3 + 0.016406249999999*x**2 + 0.499999999999996*x + 2.92968750000037

#numerically-l50-d4:
def polyReLU44(x):
    return -1.10725764323894e-6*x**4 - 2.57495450720979e-13*x**3 + 0.0099864545916712*x**2 + 0.500000000516826*x + 6.86330551439198

#Interval = [-60,60]
#presicion = 10
#Legendre-l60-d2:
def polyReLU45(x):
    return 0.00707355302636607*x**2 + 0.499999999999995*x + 6.3661977236332

#Chebyshev-l60-d2:
def polyReLU46(x):
    return 0.00781249999999997*x**2 + 0.5*x + 5.62500000000003

#numerically-l60-d2:
def polyReLU47(x):
    return 0.00525784633826781*x**2 + 0.500000000025419*x + 11.5672069342433

#Legendre-l60-d3:
def polyReLU48(x):
    return -4.55883665821395e-15*x**3 + 0.00707355302636607*x**2 + 0.500000000012304*x + 6.3661977236332

#Chebyshev-l60-d3:
def polyReLU49(x):
    return 6.93637256423156e-19*x**3 + 0.00781249999999997*x**2 + 0.499999999999999*x + 5.62500000000003

#numerically-l60-d3:
def polyReLU50(x):
    return -1.78836058182299e-13*x**3 + 0.00525784633826781*x**2 + 0.50000000051688*x + 11.5672069342433

#Legendre-l60-d4:
def polyReLU51(x):
    return -1.57190067283707e-6*x**4 - 4.55883665821395e-15*x**3 + 0.0127323954485937*x**2 + 0.500000000012304*x + 3.81971863363719

#Chebyshev-l60-d4:
def polyReLU52(x):
    return -1.89887152777755e-6*x**4 + 6.93637256423156e-19*x**3 + 0.0136718749999993*x**2 + 0.499999999999999*x + 3.51562500000029

#numerically-l60-d4:
def polyReLU53(x):
    return -6.40774099089882e-7*x**4 - 1.78836058182299e-13*x**3 + 0.00832204549302609*x**2 + 0.50000000051688*x + 8.23596661730804

#Interval = [-70,70]
#presicion = 10
#Legendre-l70-d2:
def polyReLU54(x):
    return 0.00606304545111158*x**2 + 0.499999999999996*x + 7.4272306775833

#Chebyshev-l70-d2:
def polyReLU55(x):
    return 0.00669642857142855*x**2 + 0.5*x + 6.56250000000004

#numerically-l70-d2:
def polyReLU56(x):
    return 0.00450672543280076*x**2 + 0.50000000002542*x + 13.495074756618

#Legendre-l70-d3:
def polyReLU57(x):
    return -2.0876466808513e-15*x**3 + 0.00606304545111158*x**2 + 0.500000000007668*x + 7.4272306775833

#Chebyshev-l70-d3:
def polyReLU58(x):
    return 8.92952335734351e-19*x**3 + 0.00669642857142855*x**2 + 0.499999999999997*x + 6.56250000000004

#numerically-l70-d3:
def polyReLU59(x):
    return -1.31390175511856e-13*x**3 + 0.00450672543280076*x**2 + 0.500000000516883*x + 13.495074756618

#Legendre-l70-d4:
def polyReLU60(x):
    return -9.89884971802302e-7*x**4 - 2.0876466808513e-15*x**3 + 0.0109134818129741*x**2 + 0.500000000007668*x + 4.45633840590055

#Chebyshev-l70-d4:
def polyReLU61(x):
    return -1.19579081632641e-6*x**4 + 8.92952335734351e-19*x**3 + 0.0117187499999994*x**2 + 0.499999999999997*x + 4.1015625000003

#numerically-l70-d4:
def polyReLU62(x):
    return -4.0351954927945e-7*x**4 - 1.31390175511856e-13*x**3 + 0.00713318185115429*x**2 + 0.500000000516883*x + 9.60862772020942

#Interval = [-80,80]
#presicion = 10
#Legendre-l80-d2:
def polyReLU63(x):
    return 0.00530516476972348*x**2 + 0.500000000000008*x + 8.48826363156246

#Chebyshev-l80-d2:
def polyReLU64(x):
    return 0.00585937500000002*x**2 + 0.499999999999999*x + 7.49999999999996

#numerically-l80-d2:
def polyReLU65(x):
    return 0.00394338475370127*x**2 + 0.500000000025419*x + 15.4229425789892

#Legendre-l80-d3:
def polyReLU66(x):
    return 2.81197157179789e-15*x**3 + 0.00530516476972348*x**2 + 0.49999999998651*x + 8.48826363156246

#Chebyshev-l80-d3:
def polyReLU67(x):
    return 2.21788057198806e-18*x**3 + 0.00585937500000002*x**2 + 0.49999999999999*x + 7.49999999999996

#numerically-l80-d3:
def polyReLU68(x):
    return -1.0059818752374e-13*x**3 + 0.00394338475370127*x**2 + 0.500000000516895*x + 15.4229425789892

#Legendre-l80-d4:
def polyReLU69(x):
    return -6.63145596130315e-7*x**4 + 2.81197157179789e-15*x**3 + 0.00954929658496065*x**2 + 0.49999999998651*x + 5.09295817933123

#Chebyshev-l80-d4:
def polyReLU70(x):
    return -8.01086425781201e-7*x**4 + 2.21788057198806e-18*x**3 + 0.0102539062499998*x**2 + 0.49999999999999*x + 4.68750000000013

#numerically-l80-d4:
def polyReLU71(x):
    return -2.70326573052084e-7*x**4 - 1.0059818752374e-13*x**3 + 0.00624153411975765*x**2 + 0.500000000516895*x + 10.9812888230992

#Interval = [-90,90]
#presicion = 10
#Legendre-l90-d2:
def polyReLU72(x):
    return 0.00471570201756536*x**2 + 0.500000000000007*x + 9.5492965854766

#Chebyshev-l90-d2:
def polyReLU73(x):
    return 0.00520833333333334*x**2 + 0.500000000000001*x + 8.4375

#numerically-l90-d2:
def polyReLU74(x):
    return 0.00350523089217879*x**2 + 0.500000000025419*x + 17.3508104013635

#Legendre-l90-d3:
def polyReLU75(x):
    return -1.81628907829959e-15*x**3 + 0.00471570201756536*x**2 + 0.500000000011041*x + 9.5492965854766

#Chebyshev-l90-d3:
def polyReLU76(x):
    return -4.73016213323212e-20*x**3 + 0.00520833333333334*x**2 + 0.500000000000001*x + 8.4375

#numerically-l90-d3:
def polyReLU77(x):
    return -7.94802657014758e-14*x**3 + 0.00350523089217879*x**2 + 0.500000000516865*x + 17.3508104013635

#Legendre-l90-d4:
def polyReLU78(x):
    return -4.65748347497499e-7*x**4 - 1.81628907829959e-15*x**3 + 0.00848826363230479*x**2 + 0.500000000011041*x + 5.72957795055667

#Chebyshev-l90-d4:
def polyReLU79(x):
    return -5.62628600822986e-7*x**4 - 4.73016213323212e-20*x**3 + 0.00911458333333293*x**2 + 0.500000000000001*x + 5.27343750000033

#numerically-l90-d4:
def polyReLU80(x):
    return -1.89858992322061e-7*x**4 - 7.94802657014758e-14*x**3 + 0.00554803032867502*x**2 + 0.500000000516865*x + 12.3539499259832

#Interval = [-100,100]
#presicion = 10
#Legendre-l100-d2:
def polyReLU81(x):
    return 0.00424413181580413*x**2 + 0.499999999999988*x + 10.6103295394285

#Chebyshev-l100-d2:
def polyReLU82(x):
    return 0.00468749999999997*x**2 + 0.5*x + 9.3750000000001

#numerically-l100-d2:
def polyReLU83(x):
    return 0.00315470780296095*x**2 + 0.500000000025418*x + 19.278678223737

#Legendre-l100-d3:
def polyReLU84(x):
    return -1.22583268439213e-15*x**3 + 0.00424413181580413*x**2 + 0.500000000009181*x + 10.6103295394285

#Chebyshev-l100-d3:
def polyReLU85(x):
    return -2.57033339952792e-19*x**3 + 0.00468749999999997*x**2 + 0.500000000000002*x + 9.3750000000001

#numerically-l100-d3:
def polyReLU86(x):
    return -6.43790886790681e-14*x**3 + 0.00315470780296095*x**2 + 0.500000000516865*x + 19.278678223737

#Legendre-l100-d4:
def polyReLU87(x):
    return -3.39530545331229e-7*x**4 - 1.22583268439213e-15*x**3 + 0.00763943726912612*x**2 + 0.500000000009181*x + 6.36619772277123

#Chebyshev-l100-d4:
def polyReLU88(x):
    return -4.10156249999994e-7*x**4 - 2.57033339952792e-19*x**3 + 0.00820312499999992*x**2 + 0.500000000000002*x + 5.85937500000015

#numerically-l100-d4:
def polyReLU89(x):
    return -1.38407205404213e-7*x**4 - 6.43790886790681e-14*x**3 + 0.00499322729582658*x**2 + 0.500000000516865*x + 13.7266110288125

#Interval = [-110,110]
#presicion = 10
#Legendre-l110-d2:
def polyReLU90(x):
    return 0.00385830165070682*x**2 + 0.499999999999983*x + 11.6713624933945

#Chebyshev-l110-d2:
def polyReLU91(x):
    return 0.00426136363636365*x**2 + 0.500000000000001*x + 10.3124999999999

#numerically-l110-d2:
def polyReLU92(x):
    return 0.00286791618450988*x**2 + 0.500000000025419*x + 21.2065460461112

#Legendre-l110-d3:
def polyReLU93(x):
    return 5.44861649380178e-15*x**3 + 0.00385830165070682*x**2 + 0.499999999950537*x + 11.6713624933945

#Chebyshev-l110-d3:
def polyReLU94(x):
    return 4.86910913869705e-19*x**3 + 0.00426136363636365*x**2 + 0.499999999999998*x + 10.3124999999999

#numerically-l110-d3:
def polyReLU95(x):
    return -5.32061865072485e-14*x**3 + 0.00286791618450988*x**2 + 0.500000000516869*x + 21.2065460461112

#Legendre-l110-d4:
def polyReLU96(x):
    return -2.55094323890605e-7*x**4 + 5.44861649380178e-15*x**3 + 0.00694494296978273*x**2 + 0.499999999950537*x + 7.00281749814262

#Chebyshev-l110-d4:
def polyReLU97(x):
    return -3.08156461307289e-7*x**4 + 4.86910913869705e-19*x**3 + 0.0074573863636364*x**2 + 0.499999999999998*x + 6.44531249999993

#numerically-l110-d4:
def polyReLU98(x):
    return -1.03987381971369e-7*x**4 - 5.32061865072485e-14*x**3 + 0.00453929754165657*x**2 + 0.500000000516869*x + 15.0992721317085

#Interval = [-120,120]
#presicion = 10
#Legendre-l120-d2:
def polyReLU99(x):
    return 0.00353677651318313*x**2 + 0.500000000000006*x + 12.7323954472658

#Chebyshev-l120-d2:
def polyReLU100(x):
    return 0.00390625*x**2 + 0.5*x + 11.25

#numerically-l120-d2:
def polyReLU101(x):
    return 0.00262892316913385*x**2 + 0.50000000002542*x + 23.1344138684872

#Legendre-l120-d3:
def polyReLU102(x):
    return -1.14464777164815e-15*x**3 + 0.00353677651318313*x**2 + 0.500000000012368*x + 12.7323954472658

#Chebyshev-l120-d3:
def polyReLU103(x):
    return 3.11073455890551e-19*x**3 + 0.00390625*x**2 + 0.499999999999997*x + 11.25

#numerically-l120-d3:
def polyReLU104(x):
    return -4.47087106068029e-14*x**3 + 0.00262892316913385*x**2 + 0.500000000516878*x + 23.1344138684872

#Legendre-l120-d4:
def polyReLU105(x):
    return -1.9648758410475e-7*x**4 - 1.14464777164815e-15*x**3 + 0.00636619772429865*x**2 + 0.500000000012368*x + 7.63943726727053

#Chebyshev-l120-d4:
def polyReLU106(x):
    return -2.37358940972231e-7*x**4 + 3.11073455890551e-19*x**3 + 0.00683593750000011*x**2 + 0.499999999999997*x + 7.03124999999986

#numerically-l120-d4:
def polyReLU107(x):
    return -8.00967623861525e-8*x**4 - 4.47087106068029e-14*x**3 + 0.00416102274651141*x**2 + 0.500000000516878*x + 16.4719332346236

#Interval = [-130,130]
#presicion = 10
#Legendre-l130-d2:
def polyReLU108(x):
    return 0.00326471678124099*x**2 + 0.500000000000009*x + 13.7934284019566

#Chebyshev-l130-d2:
def polyReLU109(x):
    return 0.0036057692307692*x**2 + 0.5*x + 12.1875000000002

#numerically-l130-d2:
def polyReLU110(x):
    return 0.00242669830996988*x**2 + 0.500000000025418*x + 25.062281690859

#Legendre-l130-d3:
def polyReLU111(x):
    return 2.81583231141519e-16*x**3 + 0.00326471678124099*x**2 + 0.499999999996439*x + 13.7934284019566

#Chebyshev-l130-d3:
def polyReLU112(x):
    return 2.03457091370897e-19*x**3 + 0.0036057692307692*x**2 + 0.499999999999997*x + 12.1875000000002

#numerically-l130-d3:
def polyReLU113(x):
    return -3.80914803196178e-14*x**3 + 0.00242669830996988*x**2 + 0.500000000516831*x + 25.062281690859

#Legendre-l130-d4:
def polyReLU114(x):
    return -1.54542806123427e-7*x**4 + 2.81583231141519e-16*x**3 + 0.0058764902046565*x**2 + 0.499999999996439*x + 8.27605704541238

#Chebyshev-l130-d4:
def polyReLU115(x):
    return -1.86689235320902e-7*x**4 + 2.03457091370897e-19*x**3 + 0.00631009615384628*x**2 + 0.499999999999997*x + 7.61718749999991

#numerically-l130-d4:
def polyReLU116(x):
    return -6.29982728282263e-8*x**4 - 3.80914803196178e-14*x**3 + 0.00384094407370653*x**2 + 0.500000000516831*x + 17.8445943374887

#Interval = [-140,140]
#presicion = 10
#Legendre-l140-d2:
def polyReLU117(x):
    return 0.00303152272555605*x**2 + 0.499999999999986*x + 14.8544613551643

#Chebyshev-l140-d2:
def polyReLU118(x):
    return 0.00334821428571427*x**2 + 0.5*x + 13.1250000000001

#numerically-l140-d2:
def polyReLU119(x):
    return 0.00225336271640043*x**2 + 0.50000000002542*x + 26.9901495132353

#Legendre-l140-d3:
def polyReLU120(x):
    return -4.92952546693621e-16*x**3 + 0.00303152272555605*x**2 + 0.500000000007233*x + 14.8544613551643

#Chebyshev-l140-d3:
def polyReLU121(x):
    return 3.13467273980063e-20*x**3 + 0.00334821428571427*x**2 + 0.5*x + 13.1250000000001

#numerically-l140-d3:
def polyReLU122(x):
    return -3.28493750193025e-14*x**3 + 0.00225336271640043*x**2 + 0.500000000516911*x + 26.9901495132353

#Legendre-l140-d4:
def polyReLU123(x):
    return -1.23735621474924e-7*x**4 - 4.92952546693621e-16*x**3 + 0.00545674090648004*x**2 + 0.500000000007233*x + 8.91267681181675

#Chebyshev-l140-d4:
def polyReLU124(x):
    return -1.49473852040826e-7*x**4 + 3.13467273980063e-20*x**3 + 0.00585937500000016*x**2 + 0.5*x + 8.20312499999972

#numerically-l140-d4:
def polyReLU125(x):
    return -5.04399436602117e-8*x**4 - 3.28493750193025e-14*x**3 + 0.0035665909255845*x**2 + 0.500000000516911*x + 19.2172554403749

#Interval = [-150,150]
#presicion = 10
#Legendre-l150-d2:
def polyReLU126(x):
    return 0.00282942121053861*x**2 + 0.499999999999998*x + 15.9154943091304

#Chebyshev-l150-d2:
def polyReLU127(x):
    return 0.00312499999999998*x**2 + 0.5*x + 14.0625000000001

#numerically-l150-d2:
def polyReLU128(x):
    return 0.00210313853530721*x**2 + 0.500000000025419*x + 28.9180173356069

#Legendre-l150-d3:
def polyReLU129(x):
    return -8.232291853112e-16*x**3 + 0.00282942121053861*x**2 + 0.50000000001389*x + 15.9154943091304

#Chebyshev-l150-d3:
def polyReLU130(x):
    return -1.23140724639931e-18*x**3 + 0.00312499999999998*x**2 + 0.500000000000017*x + 14.0625000000001

#numerically-l150-d3:
def polyReLU131(x):
    return -2.86122612420213e-14*x**3 + 0.00210313853530721*x**2 + 0.500000000516855*x + 28.9180173356069

#Legendre-l150-d4:
def polyReLU132(x):
    return -1.00601643061014e-7*x**4 - 8.232291853112e-16*x**3 + 0.00509295817941766*x**2 + 0.50000000001389*x + 9.54929658415841

#Chebyshev-l150-d4:
def polyReLU133(x):
    return -1.21527777777773e-7*x**4 - 1.23140724639931e-18*x**3 + 0.00546874999999989*x**2 + 0.500000000000017*x + 8.78906250000032

#numerically-l150-d4:
def polyReLU134(x):
    return -4.10095423419023e-8*x**4 - 2.86122612420213e-14*x**3 + 0.00332881819721502*x**2 + 0.500000000516855*x + 20.5899165432381

#Interval = [-160,160]
#presicion = 10
#Legendre-l160-d2:
def polyReLU135(x):
    return 0.00265258238486148*x**2 + 0.50000000000001*x + 16.9765272631289

#Chebyshev-l160-d2:
def polyReLU136(x):
    return 0.00292968750000001*x**2 + 0.5*x + 14.9999999999999

#numerically-l160-d2:
def polyReLU137(x):
    return 0.0019716923768506*x**2 + 0.500000000025419*x + 30.845885157979

#Legendre-l160-d3:
def polyReLU138(x):
    return 6.55908155972157e-16*x**3 + 0.00265258238486148*x**2 + 0.499999999987417*x + 16.9765272631289

#Chebyshev-l160-d3:
def polyReLU139(x):
    return 3.22314884310067e-19*x**3 + 0.00292968750000001*x**2 + 0.499999999999995*x + 14.9999999999999

#numerically-l160-d3:
def polyReLU140(x):
    return -2.5146663964111e-14*x**3 + 0.0019716923768506*x**2 + 0.500000000516839*x + 30.845885157979

#Legendre-l160-d4:
def polyReLU141(x):
    return -8.28931995160235e-8*x**4 + 6.55908155972157e-16*x**3 + 0.00477464829247312*x**2 + 0.499999999987417*x + 10.1859163586889

#Chebyshev-l160-d4:
def polyReLU142(x):
    return -1.00135803222649e-7*x**4 + 3.22314884310067e-19*x**3 + 0.00512695312499984*x**2 + 0.499999999999995*x + 9.37500000000033

#numerically-l160-d4:
def polyReLU143(x):
    return -3.37908216316858e-8*x**4 - 2.5146663964111e-14*x**3 + 0.00312076705988474*x**2 + 0.500000000516839*x + 21.962577646153

#Interval = [-170,170]
#presicion = 10
#Legendre-l170-d2:
def polyReLU144(x):
    return 0.00249654812692906*x**2 + 0.499999999999997*x + 18.0375602170663

#Chebyshev-l170-d2:
def polyReLU145(x):
    return 0.00275735294117648*x**2 + 0.5*x + 15.9374999999999

#numerically-l170-d2:
def polyReLU146(x):
    return 0.00185571047233*x**2 + 0.500000000025421*x + 32.7737529803522

#Legendre-l170-d3:
def polyReLU147(x):
    return 6.17983640188445e-16*x**3 + 0.00249654812692906*x**2 + 0.499999999986602*x + 18.0375602170663

#Chebyshev-l170-d3:
def polyReLU148(x):
    return -6.1460602865186e-19*x**3 + 0.00275735294117648*x**2 + 0.500000000000011*x + 15.9374999999999

#numerically-l170-d3:
def polyReLU149(x):
    return -2.22765413626394e-14*x**3 + 0.00185571047233*x**2 + 0.500000000516869*x + 32.7737529803522

#Legendre-l170-d4:
def polyReLU150(x):
    return -6.91085986655809e-8*x**4 + 6.17983640188445e-16*x**3 + 0.00449378662837207*x**2 + 0.499999999986602*x + 10.8225361304628

#Chebyshev-l170-d4:
def polyReLU151(x):
    return -8.34838693262732e-8*x**4 - 6.1460602865186e-19*x**3 + 0.00482536764705874*x**2 + 0.500000000000011*x + 9.96093750000015

#numerically-l170-d4:
def polyReLU152(x):
    return -2.81716273975366e-8*x**4 - 2.22765413626394e-14*x**3 + 0.00293719252695594*x**2 + 0.500000000516869*x + 23.3352387489884

#Interval = [-180,180]
#presicion = 10
#Legendre-l180-d2:
def polyReLU153(x):
    return 0.0023578510087826*x**2 + 0.500000000000001*x + 19.0985931709547

#Chebyshev-l180-d2:
def polyReLU154(x):
    return 0.00260416666666667*x**2 + 0.5*x + 16.875

#numerically-l180-d2:
def polyReLU155(x):
    return 0.00175261544608926*x**2 + 0.500000000025418*x + 34.7016208027303

#Legendre-l180-d3:
def polyReLU156(x):
    return -4.96671296708789e-16*x**3 + 0.0023578510087826*x**2 + 0.500000000012071*x + 19.0985931709547

#Chebyshev-l180-d3:
def polyReLU157(x):
    return 9.79527989580932e-20*x**3 + 0.00260416666666667*x**2 + 0.499999999999998*x + 16.875

#numerically-l180-d3:
def polyReLU158(x):
    return -1.98705724615303e-14*x**3 + 0.00175261544608926*x**2 + 0.500000000516877*x + 34.7016208027303

#Legendre-l180-d4:
def polyReLU159(x):
    return -5.82185434371768e-8*x**4 - 4.96671296708789e-16*x**3 + 0.00424413181615195*x**2 + 0.500000000012071*x + 11.4591559011167

#Chebyshev-l180-d4:
def polyReLU160(x):
    return -7.03285751028905e-8*x**4 + 9.79527989580932e-20*x**3 + 0.00455729166666695*x**2 + 0.499999999999998*x + 10.5468749999991

#numerically-l180-d4:
def polyReLU161(x):
    return -2.37323740404073e-8*x**4 - 1.98705724615303e-14*x**3 + 0.0027740151643438*x**2 + 0.500000000516877*x + 24.7078998519071

#Interval = [-190,190]
#presicion = 10
#Legendre-l190-d2:
def polyReLU162(x):
    return 0.00223375358728555*x**2 + 0.499999999999994*x + 20.1596261241458

#Chebyshev-l190-d2:
def polyReLU163(x):
    return 0.00246710526315788*x**2 + 0.5*x + 17.8125000000001

#numerically-l190-d2:
def polyReLU164(x):
    return 0.0016603725278741*x**2 + 0.50000000002542*x + 36.6294886251024

#Legendre-l190-d3:
def polyReLU165(x):
    return -3.24818523929522e-18*x**3 + 0.00223375358728555*x**2 + 0.500000000000082*x + 20.1596261241458

#Chebyshev-l190-d3:
def polyReLU166(x):
    return -1.0956946909724e-20*x**3 + 0.00246710526315788*x**2 + 0.5*x + 17.8125000000001

#numerically-l190-d3:
def polyReLU167(x):
    return -1.78344024036963e-14*x**3 + 0.0016603725278741*x**2 + 0.500000000516891*x + 36.6294886251024

#Legendre-l190-d4:
def polyReLU168(x):
    return -4.95014645563051e-8*x**4 - 3.24818523929522e-18*x**3 + 0.00402075645780585*x**2 + 0.500000000000082*x + 12.0957756703883

#Chebyshev-l190-d4:
def polyReLU169(x):
    return -5.97982577635217e-8*x**4 - 1.0956946909724e-20*x**3 + 0.00431743421052628*x**2 + 0.5*x + 11.1328125000002

#numerically-l190-d4:
def polyReLU170(x):
    return -2.01789189974551e-8*x**4 - 1.78344024036963e-14*x**3 + 0.00262801436621974*x**2 + 0.500000000516891*x + 26.0805609547972

#Interval = [-200,200]
#presicion = 10
#Legendre-l200-d2:
def polyReLU171(x):
    return 0.00212206590790206*x**2 + 0.499999999999983*x + 21.2206590788577

#Chebyshev-l200-d2:
def polyReLU172(x):
    return 0.00234375*x**2 + 0.5*x + 18.75

#numerically-l200-d2:
def polyReLU173(x):
    return 0.00157735390148035*x**2 + 0.500000000025419*x + 38.5573564474777

#Legendre-l200-d3:
def polyReLU174(x):
    return -3.51650942282818e-16*x**3 + 0.00212206590790206*x**2 + 0.500000000010532*x + 21.2206590788577

#Chebyshev-l200-d3:
def polyReLU175(x):
    return 9.36287969823633e-20*x**3 + 0.00234375*x**2 + 0.499999999999998*x + 18.75

#numerically-l200-d3:
def polyReLU176(x):
    return -1.60937166394851e-14*x**3 + 0.00157735390148035*x**2 + 0.500000000516834*x + 38.5573564474777

#Legendre-l200-d4:
def polyReLU177(x):
    return -4.244131816645e-8*x**4 - 3.51650942282818e-16*x**3 + 0.00381971863456499*x**2 + 0.500000000010532*x + 12.7323954455326

#Chebyshev-l200-d4:
def polyReLU178(x):
    return -5.12695312500007e-8*x**4 + 9.36287969823633e-20*x**3 + 0.00410156250000003*x**2 + 0.499999999999998*x + 11.7187499999999

#numerically-l200-d4:
def polyReLU179(x):
    return -1.73009006753732e-8*x**4 - 1.60937166394851e-14*x**3 + 0.00249661364790498*x**2 + 0.500000000516834*x + 27.4532220577279

#Interval = [-210,210]
#presicion = 10
#Legendre-l210-d2:
def polyReLU180(x):
    return 0.00202101515038242*x**2 + 0.499999999999992*x + 22.2816920328003

#Chebyshev-l210-d2:
def polyReLU181(x):
    return 0.00223214285714284*x**2 + 0.5*x + 19.6875000000002

#numerically-l210-d2:
def polyReLU182(x):
    return 0.00150224181093376*x**2 + 0.500000000025419*x + 40.4852242698485

#Legendre-l210-d3:
def polyReLU183(x):
    return -2.40489047279559e-16*x**3 + 0.00202101515038242*x**2 + 0.500000000007946*x + 22.2816920328003

#Chebyshev-l210-d3:
def polyReLU184(x):
    return 1.68192400601757e-19*x**3 + 0.00223214285714284*x**2 + 0.499999999999995*x + 19.6875000000002

#numerically-l210-d3:
def polyReLU185(x):
    return -1.45991857455052e-14*x**3 + 0.00150224181093376*x**2 + 0.500000000516891*x + 40.4852242698485

#Legendre-l210-d4:
def polyReLU186(x):
    return -3.66624063633939e-8*x**4 - 2.40489047279559e-16*x**3 + 0.00363782727101314*x**2 + 0.500000000007946*x + 13.3690152177867

#Chebyshev-l210-d4:
def polyReLU187(x):
    return -4.42885487528298e-8*x**4 + 1.68192400601757e-19*x**3 + 0.00390624999999981*x**2 + 0.499999999999995*x + 12.304687500001

#numerically-l210-d4:
def polyReLU188(x):
    return -1.49451684919289e-8*x**4 - 1.45991857455052e-14*x**3 + 0.002377727283724*x**2 + 0.500000000516891*x + 28.825883160546

#Interval = [-220,220]
#presicion = 10
#Legendre-l220-d2:
def polyReLU189(x):
    return 0.00192915082535377*x**2 + 0.499999999999996*x + 23.3427249867824

#Chebyshev-l220-d2:
def polyReLU190(x):
    return 0.00213068181818182*x**2 + 0.499999999999999*x + 20.625

#numerically-l220-d2:
def polyReLU191(x):
    return 0.00143395809225505*x**2 + 0.500000000025419*x + 42.413092092219

#Legendre-l220-d3:
def polyReLU192(x):
    return 1.36829539666503e-15*x**3 + 0.00192915082535377*x**2 + 0.499999999950327*x + 23.3427249867824

#Chebyshev-l220-d3:
def polyReLU193(x):
    return 1.94933431583732e-19*x**3 + 0.00213068181818182*x**2 + 0.499999999999994*x + 20.625

#numerically-l220-d3:
def polyReLU194(x):
    return -1.3300405057291e-14*x**3 + 0.00143395809225505*x**2 + 0.500000000516827*x + 42.413092092219

#Legendre-l220-d4:
def polyReLU195(x):
    return -3.18867904870952e-8*x**4 + 1.36829539666503e-15*x**3 + 0.00347247148492914*x**2 + 0.499999999950327*x + 14.0056349960631

#Chebyshev-l220-d4:
def polyReLU196(x):
    return -3.85195576634021e-8*x**4 + 1.94933431583732e-19*x**3 + 0.00372869318181781*x**2 + 0.499999999999994*x + 12.8906250000018

#numerically-l220-d4:
def polyReLU197(x):
    return -1.29984227462863e-8*x**4 - 1.3300405057291e-14*x**3 + 0.00226964877081974*x**2 + 0.500000000516827*x + 30.1985442635398

#Interval = [-230,230]
#presicion = 10
#Legendre-l230-d2:
def polyReLU198(x):
    return 0.00184527470251304*x**2 + 0.500000000000001*x + 24.4037579407476

#Chebyshev-l230-d2:
def polyReLU199(x):
    return 0.00203804347826088*x**2 + 0.499999999999999*x + 21.5624999999999

#numerically-l230-d2:
def polyReLU200(x):
    return 0.00137161208824401*x**2 + 0.500000000025419*x + 44.3409599145905

#Legendre-l230-d3:
def polyReLU201(x):
    return 1.74825729058823e-16*x**3 + 0.00184527470251304*x**2 + 0.499999999993065*x + 24.4037579407476

#Chebyshev-l230-d3:
def polyReLU202(x):
    return 1.72165570984584e-19*x**3 + 0.00203804347826088*x**2 + 0.499999999999994*x + 21.5624999999999

#numerically-l230-d3:
def polyReLU203(x):
    return -1.2169922537812e-14*x**3 + 0.00137161208824401*x**2 + 0.500000000516865*x + 44.3409599145905

#Legendre-l230-d4:
def polyReLU204(x):
    return -2.79058556115876e-8*x**4 + 1.74825729058823e-16*x**3 + 0.00332149446436409*x**2 + 0.499999999993065*x + 14.6422547654904

#Chebyshev-l230-d4:
def polyReLU205(x):
    return -3.37105490260557e-8*x**4 + 1.72165570984584e-19*x**3 + 0.0035665760869566*x**2 + 0.499999999999994*x + 13.4765624999995

#numerically-l230-d4:
def polyReLU206(x):
    return -1.13756230299087e-8*x**4 - 1.2169922537812e-14*x**3 + 0.00217096838949392*x**2 + 0.500000000516865*x + 31.5712053662002

#Interval = [-240,240]
#presicion = 10
#Legendre-l240-d2:
def polyReLU207(x):
    return 0.00176838825659149*x**2 + 0.499999999999998*x + 25.464790894534

#Chebyshev-l240-d2:
def polyReLU208(x):
    return 0.001953125*x**2 + 0.5*x + 22.4999999999999

#numerically-l240-d2:
def polyReLU209(x):
    return 0.00131446158456706*x**2 + 0.500000000025419*x + 46.2688277369689

#Legendre-l240-d3:
def polyReLU210(x):
    return -3.2967221610598e-16*x**3 + 0.00176838825659149*x**2 + 0.50000000001424*x + 25.464790894534

#Chebyshev-l240-d3:
def polyReLU211(x):
    return -4.6640122569057e-19*x**3 + 0.001953125*x**2 + 0.500000000000016*x + 22.4999999999999

#numerically-l240-d3:
def polyReLU212(x):
    return -1.11769877324332e-14*x**3 + 0.00131446158456706*x**2 + 0.500000000516869*x + 46.2688277369689

#Legendre-l240-d4:
def polyReLU213(x):
    return -2.45609480130877e-8*x**4 - 3.2967221610598e-16*x**3 + 0.00318309886214888*x**2 + 0.50000000001424*x + 15.2788745345463

#Chebyshev-l240-d4:
def polyReLU214(x):
    return -2.96698676215297e-8*x**4 - 4.6640122569057e-19*x**3 + 0.0034179687500001*x**2 + 0.500000000000016*x + 14.0624999999993

#numerically-l240-d4:
def polyReLU215(x):
    return -1.00120952982833e-8*x**4 - 1.11769877324332e-14*x**3 + 0.00208051137325694*x**2 + 0.500000000516869*x + 32.9438664692219

#Interval = [-250,250]
#presicion = 10
#Legendre-l250-d2:
def polyReLU216(x):
    return 0.00169765272631641*x**2 + 0.500000000000001*x + 26.5258238486362

#Chebyshev-l250-d2:
def polyReLU217(x):
    return 0.001875*x**2 + 0.499999999999999*x + 23.4375

#numerically-l250-d2:
def polyReLU218(x):
    return 0.00126188312118462*x**2 + 0.500000000025418*x + 48.1966955593319

#Legendre-l250-d3:
def polyReLU219(x):
    return -9.23688440219665e-17*x**3 + 0.00169765272631641*x**2 + 0.500000000004331*x + 26.5258238486362

#Chebyshev-l250-d3:
def polyReLU220(x):
    return 1.92578685487811e-19*x**3 + 0.001875*x**2 + 0.499999999999992*x + 23.4375

#numerically-l250-d3:
def polyReLU221(x):
    return -1.03003444321223e-14*x**3 + 0.00126188312118462*x**2 + 0.500000000516851*x + 48.1966955593319

#Legendre-l250-d4:
def polyReLU222(x):
    return -2.17299548983844e-8*x**4 - 9.23688440219665e-17*x**3 + 0.00305577490746738*x**2 + 0.500000000004331*x + 15.9154943083896

#Chebyshev-l250-d4:
def polyReLU223(x):
    return -2.62499999999988e-8*x**4 + 1.92578685487811e-19*x**3 + 0.00328124999999993*x**2 + 0.499999999999992*x + 14.6484375000004

#numerically-l250-d4:
def polyReLU224(x):
    return -8.85806114591522e-9*x**4 - 1.03003444321223e-14*x**3 + 0.00199729091833469*x**2 + 0.500000000516851*x + 34.3165275719476

#Interval = [-260,260]
#presicion = 10
#Legendre-l260-d2:
def polyReLU225(x):
    return 0.00163235839061869*x**2 + 0.500000000000012*x + 27.5868568039638

#Chebyshev-l260-d2:
def polyReLU226(x):
    return 0.0018028846153846*x**2 + 0.5*x + 24.3750000000003

#numerically-l260-d2:
def polyReLU227(x):
    return 0.00121334915498496*x**2 + 0.500000000025419*x + 50.1245633817171

#Legendre-l260-d3:
def polyReLU228(x):
    return 7.07644180938083e-17*x**3 + 0.00163235839061869*x**2 + 0.499999999996425*x + 27.5868568039638

#Chebyshev-l260-d3:
def polyReLU229(x):
    return 2.17466153388778e-19*x**3 + 0.0018028846153846*x**2 + 0.499999999999991*x + 24.3750000000003

#numerically-l260-d3:
def polyReLU230(x):
    return -9.52340823042558e-15*x**3 + 0.00121334915498496*x**2 + 0.500000000516859*x + 50.1245633817171

#Legendre-l260-d4:
def polyReLU231(x):
    return -1.93178507653972e-8*x**4 + 7.07644180938083e-17*x**3 + 0.00293824510232437*x**2 + 0.499999999996425*x + 16.5521140908903

#Chebyshev-l260-d4:
def polyReLU232(x):
    return -2.33361544151077e-8*x**4 + 2.17466153388778e-19*x**3 + 0.00315504807692284*x**2 + 0.499999999999991*x + 15.2343750000019

#numerically-l260-d4:
def polyReLU233(x):
    return -7.87478410355445e-9*x**4 - 9.52340823042558e-15*x**3 + 0.00192047203685564*x**2 + 0.500000000516859*x + 35.6891886749283

#Interval = [-270,270]
#presicion = 10
#Legendre-l270-d2:
def polyReLU234(x):
    return 0.00157190067251684*x**2 + 0.499999999999984*x + 28.6478897565025

#Chebyshev-l270-d2:
def polyReLU235(x):
    return 0.0017361111111111*x**2 + 0.5*x + 25.3125000000001

#numerically-l270-d2:
def polyReLU236(x):
    return 0.00116841029739275*x**2 + 0.500000000025419*x + 52.0524312040999

#Legendre-l270-d3:
def polyReLU237(x):
    return -1.4692766453216e-16*x**3 + 0.00157190067251684*x**2 + 0.500000000008017*x + 28.6478897565025

#Chebyshev-l270-d3:
def polyReLU238(x):
    return -1.51720021162896e-20*x**3 + 0.0017361111111111*x**2 + 0.5*x + 25.3125000000001

#numerically-l270-d3:
def polyReLU239(x):
    return -8.83112295375761e-15*x**3 + 0.00116841029739275*x**2 + 0.500000000516865*x + 52.0524312040999

#Legendre-l270-d4:
def polyReLU240(x):
    return -1.72499387959136e-8*x**4 - 1.4692766453216e-16*x**3 + 0.00282942121074422*x**2 + 0.500000000008017*x + 17.1887338518166

#Chebyshev-l270-d4:
def polyReLU241(x):
    return -2.08380963267762e-8*x**4 - 1.51720021162896e-20*x**3 + 0.00303819444444424*x**2 + 0.5*x + 15.8203125000016

#numerically-l270-d4:
def polyReLU242(x):
    return -7.03181453049005e-9*x**4 - 8.83112295375761e-15*x**3 + 0.00184934344289566*x**2 + 0.500000000516865*x + 37.061849777868

#Interval = [-280,280]
#presicion = 10
#Legendre-l280-d2:
def polyReLU243(x):
    return 0.00151576136277784*x**2 + 0.499999999999992*x + 29.7089227103332

#Chebyshev-l280-d2:
def polyReLU244(x):
    return 0.00167410714285714*x**2 + 0.499999999999999*x + 26.2500000000001

#numerically-l280-d2:
def polyReLU245(x):
    return 0.00112668135820026*x**2 + 0.500000000025419*x + 53.980299026468

#Legendre-l280-d3:
def polyReLU246(x):
    return -1.36498341556014e-16*x**3 + 0.00151576136277784*x**2 + 0.500000000008018*x + 29.7089227103332

#Chebyshev-l280-d3:
def polyReLU247(x):
    return 2.06218159094679e-19*x**3 + 0.00167410714285714*x**2 + 0.499999999999989*x + 26.2500000000001

#numerically-l280-d3:
def polyReLU248(x):
    return -8.21119447034664e-15*x**3 + 0.00112668135820026*x**2 + 0.500000000516841*x + 53.980299026468

#Legendre-l280-d4:
def polyReLU249(x):
    return -1.54669526842932e-8*x**4 - 1.36498341556014e-16*x**3 + 0.00272837045323391*x**2 + 0.500000000008018*x + 17.8253536237034

#Chebyshev-l280-d4:
def polyReLU250(x):
    return -1.86842315051021e-8*x**4 + 2.06218159094679e-19*x**3 + 0.0029296875*x**2 + 0.499999999999989*x + 16.40625

#numerically-l280-d4:
def polyReLU251(x):
    return -6.30499295753876e-9*x**4 - 8.21119447034664e-15*x**3 + 0.00178329546279359*x**2 + 0.500000000516841*x + 38.4345108807164

#Interval = [-290,290]
#presicion = 10
#Legendre-l290-d2:
def polyReLU252(x):
    return 0.00146349372963903*x**2 + 0.500000000000008*x + 30.7699556611229

#Chebyshev-l290-d2:
def polyReLU253(x):
    return 0.00161637931034481*x**2 + 0.5*x + 27.1875000000004

#numerically-l290-d2:
def polyReLU254(x):
    return 0.00108783027688297*x**2 + 0.500000000025419*x + 55.9081668488441

#Legendre-l290-d3:
def polyReLU255(x):
    return -1.32780564609426e-16*x**3 + 0.00146349372963903*x**2 + 0.500000000008384*x + 30.7699556611229

#Chebyshev-l290-d3:
def polyReLU256(x):
    return 1.5880470903479e-19*x**3 + 0.00161637931034481*x**2 + 0.499999999999992*x + 27.1875000000004

#numerically-l290-d3:
def polyReLU257(x):
    return -7.65529474942464e-15*x**3 + 0.00108783027688297*x**2 + 0.500000000516881*x + 55.9081668488441

#Legendre-l290-d4:
def polyReLU258(x):
    return -1.39214623670198e-8*x**4 - 1.32780564609426e-16*x**3 + 0.00263428871477231*x**2 + 0.500000000008384*x + 18.4619733778576

#Chebyshev-l290-d4:
def polyReLU259(x):
    return -1.68172639304592e-8*x**4 + 1.5880470903479e-19*x**3 + 0.00282866379310334*x**2 + 0.499999999999992*x + 16.9921875000012

#numerically-l290-d4:
def polyReLU260(x):
    return -5.67498484578292e-9*x**4 - 7.65529474942464e-15*x**3 + 0.00172180251580024*x**2 + 0.500000000516881*x + 39.8071719836124

#Interval = [-300,300]
#presicion = 10
#Legendre-l300-d2:
def polyReLU261(x):
    return 0.00141471060526922*x**2 + 0.499999999999991*x + 31.8309886182636

#Chebyshev-l300-d2:
def polyReLU262(x):
    return 0.00156250000000001*x**2 + 0.5*x + 28.1249999999999

#numerically-l300-d2:
def polyReLU263(x):
    return 0.00105156926765367*x**2 + 0.500000000025419*x + 57.8360346712097

#Legendre-l300-d3:
def polyReLU264(x):
    return -1.65794404734577e-16*x**3 + 0.00141471060526922*x**2 + 0.500000000011182*x + 31.8309886182636

#Chebyshev-l300-d3:
def polyReLU265(x):
    return 2.21181705859189e-19*x**3 + 0.00156250000000001*x**2 + 0.499999999999989*x + 28.1249999999999

#numerically-l300-d3:
def polyReLU266(x):
    return -7.15324721690179e-15*x**3 + 0.00105156926765367*x**2 + 0.500000000516867*x + 57.8360346712097

#Legendre-l300-d4:
def polyReLU267(x):
    return -1.25752053825948e-8*x**4 - 1.65794404734577e-16*x**3 + 0.00254647908970582*x**2 + 0.500000000011182*x + 19.0985931683529

#Chebyshev-l300-d4:
def polyReLU268(x):
    return -1.51909722222228e-8*x**4 + 2.21181705859189e-19*x**3 + 0.00273437500000006*x**2 + 0.499999999999989*x + 17.5781249999994

#numerically-l300-d4:
def polyReLU269(x):
    return -5.12619279275842e-9*x**4 - 7.15324721690179e-15*x**3 + 0.00166440909861005*x**2 + 0.500000000516867*x + 41.1798330864043

###############################################################################################
#Tanh polynomials

#Interval = [-10,10]
#presicion = 10
#Legendre-l10-d2:
def polyTanh0(x):
    return 0.12679563836438*x

#Chebyshev-l10-d2:
def polyTanh1(x):
    return 0.14876629951479*x

#numerically-l10-d2:
def polyTanh2(x):
    return 0.11739905664912*x

#Legendre-l10-d3:
def polyTanh3(x):
    return -0.00163574303018748*x**3 + 0.249476365628036*x

#Chebyshev-l10-d3:
def polyTanh4(x):
    return -0.00208265864850376*x**3 + 0.273725818425016*x

#numerically-l10-d3:
def polyTanh5(x):
    return -0.00096114278742559*x**3 + 0.190769277874857*x

#Legendre-l10-d4:
def polyTanh6(x):
    return -0.00163574303018748*x**3 + 0.249476365628036*x

#Chebyshev-l10-d4:
def polyTanh7(x):
    return -0.00208265864850376*x**3 + 0.273725818425016*x

#numerically-l10-d4:
def polyTanh8(x):
    return -0.00096114278742559*x**3 + 0.190769277874857*x

#Interval = [-20,20]
#presicion = 10
#Legendre-l20-d2:
def polyTanh9(x):
    return 0.0635963846746865*x

#Chebyshev-l20-d2:
def polyTanh10(x):
    return 0.0748457874312332*x

#numerically-l20-d2:
def polyTanh11(x):
    return 0.0586996885755647*x

#Legendre-l20-d3:
def polyTanh12(x):
    return -0.000210250193343109*x**3 + 0.126671442677408*x

#Chebyshev-l20-d3:
def polyTanh13(x):
    return -0.000270088377022856*x**3 + 0.139666997916719*x

#numerically-l20-d3:
def polyTanh14(x):
    return -0.000120149300664487*x**3 + 0.0953867693514934*x

#Legendre-l20-d4:
def polyTanh15(x):
    return -0.000210250193343109*x**3 + 0.126671442677408*x

#Chebyshev-l20-d4:
def polyTanh16(x):
    return -0.000270088377022856*x**3 + 0.139666997916719*x

#numerically-l20-d4:
def polyTanh17(x):
    return -0.000120149300664487*x**3 + 0.0953867693514934*x

#Interval = [-30,30]
#presicion = 10
#Legendre-l30-d2:
def polyTanh18(x):
    return 0.0424219069210781*x

#Chebyshev-l30-d2:
def polyTanh19(x):
    return 0.049954307387032*x

#numerically-l30-d2:
def polyTanh20(x):
    return 0.039133125731485*x

#Legendre-l30-d3:
def polyTanh21(x):
    return -6.26178739621576e-5*x**3 + 0.0846889718456613*x

#Chebyshev-l30-d3:
def polyTanh22(x):
    return -8.05757056553445e-5*x**3 + 0.093465188440918*x

#numerically-l30-d3:
def polyTanh23(x):
    return -3.55997931110266e-5*x**3 + 0.0635911798030172*x

#Legendre-l30-d4:
def polyTanh24(x):
    return -6.26178739621576e-5*x**3 + 0.0846889718456613*x

#Chebyshev-l30-d4:
def polyTanh25(x):
    return -8.05757056553445e-5*x**3 + 0.093465188440918*x

#numerically-l30-d4:
def polyTanh26(x):
    return -3.55997931110266e-5*x**3 + 0.0635911798030172*x

#Interval = [-40,40]
#presicion = 10
#Legendre-l40-d2:
def polyTanh27(x):
    return 0.0318228029608953*x

#Chebyshev-l40-d2:
def polyTanh28(x):
    return 0.0374807234289041*x

#numerically-l40-d2:
def polyTanh29(x):
    return 0.0293498442986211*x

#Legendre-l40-d3:
def polyTanh30(x):
    return -2.64645198763886e-5*x**3 + 0.0635802268124564*x

#Chebyshev-l40-d3:
def polyTanh31(x):
    return -3.40744584156065e-5*x**3 + 0.0701922035078863*x

#numerically-l40-d3:
def polyTanh32(x):
    return -1.50186627188107e-5*x**3 + 0.0476933848523879*x

#Legendre-l40-d4:
def polyTanh33(x):
    return -2.64645198763886e-5*x**3 + 0.0635802268124564*x

#Chebyshev-l40-d4:
def polyTanh34(x):
    return -3.40744584156065e-5*x**3 + 0.0701922035078863*x

#numerically-l40-d4:
def polyTanh35(x):
    return -1.50186627188107e-5*x**3 + 0.0476933848523879*x

#Interval = [-50,50]
#presicion = 10
#Legendre-l50-d2:
def polyTanh36(x):
    return 0.0254606006552245*x

#Chebyshev-l50-d2:
def polyTanh37(x):
    return 0.0299901303955989*x

#numerically-l50-d2:
def polyTanh38(x):
    return 0.023479875438897*x

#Legendre-l50-d3:
def polyTanh39(x):
    return -1.356112720213e-5*x**3 + 0.0508877141592782*x

#Chebyshev-l50-d3:
def polyTanh40(x):
    return -1.74654961599749e-5*x**3 + 0.0561883746355612*x

#numerically-l50-d3:
def polyTanh41(x):
    return -7.68955531203185e-6*x**3 + 0.038154707881912*x

#Legendre-l50-d4:
def polyTanh42(x):
    return -1.356112720213e-5*x**3 + 0.0508877141592782*x

#Chebyshev-l50-d4:
def polyTanh43(x):
    return -1.74654961599749e-5*x**3 + 0.0561883746355612*x

#numerically-l50-d4:
def polyTanh44(x):
    return -7.68955531203185e-6*x**3 + 0.038154707881912*x

#Interval = [-60,60]
#presicion = 10
#Legendre-l60-d2:
def polyTanh45(x):
    return 0.0212182344289433*x

#Chebyshev-l60-d2:
def polyTanh46(x):
    return 0.0249942884245347*x

#numerically-l60-d2:
def polyTanh47(x):
    return 0.0195665628657475*x

#Legendre-l60-d3:
def polyTanh48(x):
    return -7.85142636701317e-6*x**3 + 0.0424170856199423*x

#Chebyshev-l60-d3:
def polyTanh49(x):
    return -1.01134436111059e-5*x**3 + 0.0468393266245234*x

#numerically-l60-d3:
def polyTanh50(x):
    return -4.44997413890809e-6*x**3 + 0.0317955899015955*x

#Legendre-l60-d4:
def polyTanh51(x):
    return -7.85142636701317e-6*x**3 + 0.0424170856199423*x

#Chebyshev-l60-d4:
def polyTanh52(x):
    return -1.01134436111059e-5*x**3 + 0.0468393266245234*x

#numerically-l60-d4:
def polyTanh53(x):
    return -4.44997413890809e-6*x**3 + 0.0317955899015955*x

#Interval = [-70,70]
#presicion = 10
#Legendre-l70-d2:
def polyTanh54(x):
    return 0.0181876095570549*x

#Chebyshev-l70-d2:
def polyTanh55(x):
    return 0.0214249746339639*x

#numerically-l70-d2:
def polyTanh56(x):
    return 0.0167713395992122*x

#Legendre-l70-d3:
def polyTanh57(x):
    return -4.94568752312686e-6*x**3 + 0.0363630112045806*x

#Chebyshev-l70-d3:
def polyTanh58(x):
    return -6.37113194616762e-6*x**3 + 0.0401561025556967*x

#numerically-l70-d3:
def polyTanh59(x):
    return -2.80231607581385e-6*x**3 + 0.0272533627727962*x

#Legendre-l70-d4:
def polyTanh60(x):
    return -4.94568752312686e-6*x**3 + 0.0363630112045806*x

#Chebyshev-l70-d4:
def polyTanh61(x):
    return -6.37113194616762e-6*x**3 + 0.0401561025556967*x

#numerically-l70-d4:
def polyTanh62(x):
    return -2.80231607581385e-6*x**3 + 0.0272533627727962*x

#Interval = [-80,80]
#presicion = 10
#Legendre-l80-d2:
def polyTanh63(x):
    return 0.0159144715172466*x

#Chebyshev-l80-d2:
def polyTanh64(x):
    return 0.018747590428613*x

#numerically-l80-d2:
def polyTanh65(x):
    return 0.0146749221493106*x

#Legendre-l80-d3:
def polyTanh66(x):
    return -3.31381093632611e-6*x**3 + 0.0318207640115627*x

#Chebyshev-l80-d3:
def polyTanh67(x):
    return -4.2691680833676e-6*x**3 + 0.0351411958687445*x

#numerically-l80-d3:
def polyTanh68(x):
    return -1.87733283985193e-6*x**3 + 0.023846692426197*x

#Legendre-l80-d4:
def polyTanh69(x):
    return -3.31381093632611e-6*x**3 + 0.0318207640115627*x

#Chebyshev-l80-d4:
def polyTanh70(x):
    return -4.2691680833676e-6*x**3 + 0.0351411958687445*x

#numerically-l80-d4:
def polyTanh71(x):
    return -1.87733283985193e-6*x**3 + 0.023846692426197*x

#Interval = [-90,90]
#presicion = 10
#Legendre-l90-d2:
def polyTanh72(x):
    return 0.0141463877335312*x

#Chebyshev-l90-d2:
def polyTanh73(x):
    return 0.0166649743476679*x

#numerically-l90-d2:
def polyTanh74(x):
    return 0.0130443752438317*x

#Legendre-l90-d3:
def polyTanh75(x):
    return -2.32767786327584e-6*x**3 + 0.0282870307529692*x

#Chebyshev-l90-d3:
def polyTanh76(x):
    return -2.99885839837189e-6*x**3 + 0.0312394261637553*x

#numerically-l90-d3:
def polyTanh77(x):
    return -1.3185108559727e-6*x**3 + 0.0211970599343966*x

#Legendre-l90-d4:
def polyTanh78(x):
    return -2.32767786327584e-6*x**3 + 0.0282870307529692*x

#Chebyshev-l90-d4:
def polyTanh79(x):
    return -2.99885839837189e-6*x**3 + 0.0312394261637553*x

#numerically-l90-d4:
def polyTanh80(x):
    return -1.3185108559727e-6*x**3 + 0.0211970599343966*x

#Interval = [-100,100]
#presicion = 10
#Legendre-l100-d2:
def polyTanh81(x):
    return 0.0127318718033286*x

#Chebyshev-l100-d2:
def polyTanh82(x):
    return 0.0149987662994499*x

#numerically-l100-d2:
def polyTanh83(x):
    return 0.0117399377194485*x

#Legendre-l100-d3:
def polyTanh84(x):
    return -1.69702449829399e-6*x**3 + 0.0254595555405631*x

#Chebyshev-l100-d3:
def polyTanh85(x):
    return -2.1864208227638e-6*x**3 + 0.0281172912360327*x

#numerically-l100-d3:
def polyTanh86(x):
    return -9.61194414004101e-7*x**3 + 0.0190773539409569*x

#Legendre-l100-d4:
def polyTanh87(x):
    return -1.69702449829399e-6*x**3 + 0.0254595555405631*x

#Chebyshev-l100-d4:
def polyTanh88(x):
    return -2.1864208227638e-6*x**3 + 0.0281172912360327*x

#numerically-l100-d4:
def polyTanh89(x):
    return -9.61194414004101e-7*x**3 + 0.0190773539409569*x

#Interval = [-110,110]
#presicion = 10
#Legendre-l110-d2:
def polyTanh90(x):
    return 0.0115745115365322*x

#Chebyshev-l110-d2:
def polyTanh91(x):
    return 0.0136354367388805*x

#numerically-l110-d2:
def polyTanh92(x):
    return 0.0106726706540441*x

#Legendre-l110-d3:
def polyTanh93(x):
    return -1.27508152997475e-6*x**3 + 0.0231458764209236*x

#Chebyshev-l110-d3:
def polyTanh94(x):
    return -1.64283100932797e-6*x**3 + 0.0255623898666015*x

#numerically-l110-d3:
def polyTanh95(x):
    return -7.22159589785208e-7*x**3 + 0.0173430490372336*x

#Legendre-l110-d4:
def polyTanh96(x):
    return -1.27508152997475e-6*x**3 + 0.0231458764209236*x

#Chebyshev-l110-d4:
def polyTanh97(x):
    return -1.64283100932797e-6*x**3 + 0.0255623898666015*x

#numerically-l110-d4:
def polyTanh98(x):
    return -7.22159589785208e-7*x**3 + 0.0173430490372336*x

#Interval = [-120,120]
#presicion = 10
#Legendre-l120-d2:
def polyTanh99(x):
    return 0.0106100265128139*x

#Chebyshev-l120-d2:
def polyTanh100(x):
    return 0.0124992860530668*x

#numerically-l120-d2:
def polyTanh101(x):
    return 0.00978328143287376*x

#Legendre-l120-d3:
def polyTanh102(x):
    return -9.82185438538825e-7*x**3 + 0.0212176292490652*x

#Chebyshev-l120-d3:
def polyTanh103(x):
    return -1.26548061665394e-6*x**3 + 0.0234330385809569*x

#numerically-l120-d3:
def polyTanh104(x):
    return -5.56246767363505e-7*x**3 + 0.0158977949507977*x

#Legendre-l120-d4:
def polyTanh105(x):
    return -9.82185438538825e-7*x**3 + 0.0212176292490652*x

#Chebyshev-l120-d4:
def polyTanh106(x):
    return -1.26548061665394e-6*x**3 + 0.0234330385809569*x

#numerically-l120-d4:
def polyTanh107(x):
    return -5.56246767363505e-7*x**3 + 0.0158977949507977*x

#Interval = [-130,130]
#presicion = 10
#Legendre-l130-d2:
def polyTanh108(x):
    return 0.00979391200739523*x

#Chebyshev-l130-d2:
def polyTanh109(x):
    return 0.0115378999997495*x

#numerically-l130-d2:
def polyTanh110(x):
    return 0.00903072132265268*x

#Legendre-l130-d3:
def polyTanh111(x):
    return -7.72544821055675e-7*x**3 + 0.0195859176142656*x

#Chebyshev-l130-d3:
def polyTanh112(x):
    return -9.95385233734905e-7*x**3 + 0.0216311062698214*x

#numerically-l130-d3:
def polyTanh113(x):
    return -4.37503147020481e-7*x**3 + 0.0146748876468893*x

#Legendre-l130-d4:
def polyTanh114(x):
    return -7.72544821055675e-7*x**3 + 0.0195859176142656*x

#Chebyshev-l130-d4:
def polyTanh115(x):
    return -9.95385233734905e-7*x**3 + 0.0216311062698214*x

#numerically-l130-d4:
def polyTanh116(x):
    return -4.37503147020481e-7*x**3 + 0.0146748876468893*x

#Interval = [-140,140]
#presicion = 10
#Legendre-l140-d2:
def polyTanh117(x):
    return 0.00909437735237701*x

#Chebyshev-l140-d2:
def polyTanh118(x):
    return 0.0107138361149597*x

#numerically-l140-d2:
def polyTanh119(x):
    return 0.0083856697996061*x

#Legendre-l140-d3:
def polyTanh120(x):
    return -6.18561289800585e-7*x**3 + 0.0181872283124619*x

#Chebyshev-l140-d3:
def polyTanh121(x):
    return -7.96993193044951e-7*x**3 + 0.0200864760651683*x

#numerically-l140-d3:
def polyTanh122(x):
    return -3.50289509476762e-7*x**3 + 0.0136266813863986*x

#Legendre-l140-d4:
def polyTanh123(x):
    return -6.18561289800585e-7*x**3 + 0.0181872283124619*x

#Chebyshev-l140-d4:
def polyTanh124(x):
    return -7.96993193044951e-7*x**3 + 0.0200864760651683*x

#numerically-l140-d4:
def polyTanh125(x):
    return -3.50289509476762e-7*x**3 + 0.0136266813863986*x

#Interval = [-150,150]
#presicion = 10
#Legendre-l150-d2:
def polyTanh126(x):
    return 0.00848810848524037*x

#Chebyshev-l150-d2:
def polyTanh127(x):
    return 0.0099996344590961*x

#numerically-l150-d2:
def polyTanh128(x):
    return 0.007826625146299*x

#Legendre-l150-d3:
def polyTanh129(x):
    return -5.02925478975796e-7*x**3 + 0.0169749759429783*x

#Chebyshev-l150-d3:
def polyTanh130(x):
    return -6.48006011539457e-7*x**3 + 0.0187477156148788*x

#numerically-l150-d3:
def polyTanh131(x):
    return -2.84798344890094e-7*x**3 + 0.0127182359606378*x

#Legendre-l150-d4:
def polyTanh132(x):
    return -5.02925478975796e-7*x**3 + 0.0169749759429783*x

#Chebyshev-l150-d4:
def polyTanh133(x):
    return -6.48006011539457e-7*x**3 + 0.0187477156148788*x

#numerically-l150-d4:
def polyTanh134(x):
    return -2.84798344890094e-7*x**3 + 0.0127182359606378*x

#Interval = [-160,160]
#presicion = 10
#Legendre-l160-d2:
def polyTanh135(x):
    return 0.00795761931855443*x

#Chebyshev-l160-d2:
def polyTanh136(x):
    return 0.00937469880357663*x

#numerically-l160-d2:
def polyTanh137(x):
    return 0.00733746107465532*x

#Legendre-l160-d3:
def polyTanh138(x):
    return -4.14406079869399e-7*x**3 + 0.0159142160520214*x

#Chebyshev-l160-d3:
def polyTanh139(x):
    return -5.33954680767383e-7*x**3 + 0.0175762427001636*x

#numerically-l160-d3:
def polyTanh140(x):
    return -2.3466660498145e-7*x**3 + 0.0119233462130977*x

#Legendre-l160-d4:
def polyTanh141(x):
    return -4.14406079869399e-7*x**3 + 0.0159142160520214*x

#Chebyshev-l160-d4:
def polyTanh142(x):
    return -5.33954680767383e-7*x**3 + 0.0175762427001636*x

#numerically-l160-d4:
def polyTanh143(x):
    return -2.3466660498145e-7*x**3 + 0.0119233462130977*x

#Interval = [-170,170]
#presicion = 10
#Legendre-l170-d2:
def polyTanh144(x):
    return 0.00748953780346393*x

#Chebyshev-l170-d2:
def polyTanh145(x):
    return 0.00882327830235088*x

#numerically-l170-d2:
def polyTanh146(x):
    return 0.00690584571732267*x

#Legendre-l170-d3:
def polyTanh147(x):
    return -3.45498743301636e-7*x**3 + 0.0149782230645063*x

#Chebyshev-l170-d3:
def polyTanh148(x):
    return -4.45171282709671e-7*x**3 + 0.0165425483445366*x

#numerically-l170-d3:
def polyTanh149(x):
    return -1.95643072258112e-7*x**3 + 0.0112219729064453*x

#Legendre-l170-d4:
def polyTanh150(x):
    return -3.45498743301636e-7*x**3 + 0.0149782230645063*x

#Chebyshev-l170-d4:
def polyTanh151(x):
    return -4.45171282709671e-7*x**3 + 0.0165425483445366*x

#numerically-l170-d4:
def polyTanh152(x):
    return -1.95643072258112e-7*x**3 + 0.0112219729064453*x

#Interval = [-180,180]
#presicion = 10
#Legendre-l180-d2:
def polyTanh153(x):
    return 0.00707346324361656*x

#Chebyshev-l180-d2:
def polyTanh154(x):
    return 0.00833312179345848*x

#numerically-l180-d2:
def polyTanh155(x):
    return 0.00652218762191583*x

#Legendre-l180-d3:
def polyTanh156(x):
    return -2.91059466652851e-7*x**3 + 0.0141462082832995*x

#Chebyshev-l180-d3:
def polyTanh157(x):
    return -3.75028610133512e-7*x**3 + 0.015623677974454*x

#numerically-l180-d3:
def polyTanh158(x):
    return -1.64813856996594e-7*x**3 + 0.0105985299671984*x

#Legendre-l180-d4:
def polyTanh159(x):
    return -2.91059466652851e-7*x**3 + 0.0141462082832995*x

#Chebyshev-l180-d4:
def polyTanh160(x):
    return -3.75028610133512e-7*x**3 + 0.015623677974454*x

#numerically-l180-d4:
def polyTanh161(x):
    return -1.64813856996594e-7*x**3 + 0.0105985299671984*x

#Interval = [-190,190]
#presicion = 10
#Legendre-l190-d2:
def polyTanh162(x):
    return 0.00670118442242552*x

#Chebyshev-l190-d2:
def polyTanh163(x):
    return 0.00789455697615539*x

#numerically-l190-d2:
def polyTanh164(x):
    return 0.00617891458918343*x

#Legendre-l190-d3:
def polyTanh165(x):
    return -2.47481948360215e-7*x**3 + 0.0134017581742741*x

#Chebyshev-l190-d3:
def polyTanh166(x):
    return -3.1888044856436e-7*x**3 + 0.0148015074920594*x

#numerically-l190-d3:
def polyTanh167(x):
    return -1.40136231812826e-7*x**3 + 0.0100407126005039*x

#Legendre-l190-d4:
def polyTanh168(x):
    return -2.47481948360215e-7*x**3 + 0.0134017581742741*x

#Chebyshev-l190-d4:
def polyTanh169(x):
    return -3.1888044856436e-7*x**3 + 0.0148015074920594*x

#numerically-l190-d4:
def polyTanh170(x):
    return -1.40136231812826e-7*x**3 + 0.0100407126005039*x

#Interval = [-200,200]
#presicion = 10
#Legendre-l200-d2:
def polyTanh171(x):
    return 0.00636613227241029*x

#Chebyshev-l200-d2:
def polyTanh172(x):
    return 0.00749984578743123*x

#numerically-l200-d2:
def polyTanh173(x):
    return 0.00586996885972425*x

#Legendre-l200-d3:
def polyTanh174(x):
    return -2.12186956559739e-7*x**3 + 0.0127317409692173*x

#Chebyshev-l200-d3:
def polyTanh175(x):
    return -2.73403768428277e-7*x**3 + 0.0140615362297099*x

#numerically-l200-d3:
def polyTanh176(x):
    return -1.201493017505e-7*x**3 + 0.00953867697047808*x

#Legendre-l200-d4:
def polyTanh177(x):
    return -2.12186956559739e-7*x**3 + 0.0127317409692173*x

#Chebyshev-l200-d4:
def polyTanh178(x):
    return -2.73403768428277e-7*x**3 + 0.0140615362297099*x

#numerically-l200-d4:
def polyTanh179(x):
    return -1.201493017505e-7*x**3 + 0.00953867697047808*x

#Interval = [-210,210]
#presicion = 10
#Legendre-l210-d2:
def polyTanh180(x):
    return 0.00606298891196376*x

#Chebyshev-l210-d2:
def polyTanh181(x):
    return 0.00714272392824207*x

#numerically-l210-d2:
def polyTanh182(x):
    return 0.00559044653307071*x

#Legendre-l210-d3:
def polyTanh183(x):
    return -1.83296647803716e-7*x**3 + 0.0121255255380819*x

#Chebyshev-l210-d3:
def polyTanh184(x):
    return -2.36179163602523e-7*x**3 + 0.0133920245971648*x

#numerically-l210-d3:
def polyTanh185(x):
    return -1.03789484289405e-7*x**3 + 0.00908445425759881*x

#Legendre-l210-d4:
def polyTanh186(x):
    return -1.83296647803716e-7*x**3 + 0.0121255255380819*x

#Chebyshev-l210-d4:
def polyTanh187(x):
    return -2.36179163602523e-7*x**3 + 0.0133920245971648*x

#numerically-l210-d4:
def polyTanh188(x):
    return -1.03789484289405e-7*x**3 + 0.00908445425759881*x

#Interval = [-220,220]
#presicion = 10
#Legendre-l220-d2:
def polyTanh189(x):
    return 0.00578740330175112*x

#Chebyshev-l220-d2:
def polyTanh190(x):
    return 0.00681806595599641*x

#numerically-l220-d2:
def polyTanh191(x):
    return 0.00533633532702204*x

#Legendre-l220-d3:
def polyTanh192(x):
    return -1.59421761092888e-7*x**3 + 0.0115744132293574*x

#Chebyshev-l220-d3:
def polyTanh193(x):
    return -2.05416695957764e-7*x**3 + 0.0127833668066099*x

#numerically-l220-d3:
def polyTanh194(x):
    return -9.0269948723139e-8*x**3 + 0.00867152451861637*x

#Legendre-l220-d4:
def polyTanh195(x):
    return -1.59421761092888e-7*x**3 + 0.0115744132293574*x

#Chebyshev-l220-d4:
def polyTanh196(x):
    return -2.05416695957764e-7*x**3 + 0.0127833668066099*x

#numerically-l220-d4:
def polyTanh197(x):
    return -9.0269948723139e-8*x**3 + 0.00867152451861637*x

#Interval = [-230,230]
#presicion = 10
#Legendre-l230-d2:
def polyTanh198(x):
    return 0.00553578107252064*x

#Chebyshev-l230-d2:
def polyTanh199(x):
    return 0.00652163773316757*x

#numerically-l230-d2:
def polyTanh200(x):
    return 0.0051043207475863*x

#Legendre-l230-d3:
def polyTanh201(x):
    return -1.39519516294652e-7*x**3 + 0.0110712178815008*x

#Chebyshev-l230-d3:
def polyTanh202(x):
    return -1.79772823958581e-7*x**3 + 0.0122276271656129*x

#numerically-l230-d3:
def polyTanh203(x):
    return -7.90001162163308e-8*x**3 + 0.00829450171345952*x

#Legendre-l230-d4:
def polyTanh204(x):
    return -1.39519516294652e-7*x**3 + 0.0110712178815008*x

#Chebyshev-l230-d4:
def polyTanh205(x):
    return -1.79772823958581e-7*x**3 + 0.0122276271656129*x

#numerically-l230-d4:
def polyTanh206(x):
    return -7.90001162163308e-8*x**3 + 0.00829450171345952*x

#Interval = [-240,240]
#presicion = 10
#Legendre-l240-d2:
def polyTanh207(x):
    return 0.00530512689310964*x

#Chebyshev-l240-d2:
def polyTanh208(x):
    return 0.00624991075663335*x

#numerically-l240-d2:
def polyTanh209(x):
    return 0.00489164071643688*x

#Legendre-l240-d3:
def polyTanh210(x):
    return -1.22796849397554e-7*x**3 + 0.0106099507871*x

#Chebyshev-l240-d3:
def polyTanh211(x):
    return -1.58225737723976e-7*x**3 + 0.011718192252374*x

#numerically-l240-d3:
def polyTanh212(x):
    return -6.95308459204362e-8*x**3 + 0.00794889747539875*x

#Legendre-l240-d4:
def polyTanh213(x):
    return -1.22796849397554e-7*x**3 + 0.0106099507871*x

#Chebyshev-l240-d4:
def polyTanh214(x):
    return -1.58225737723976e-7*x**3 + 0.011718192252374*x

#numerically-l240-d4:
def polyTanh215(x):
    return -6.95308459204362e-8*x**3 + 0.00794889747539875*x

#Interval = [-250,250]
#presicion = 10
#Legendre-l250-d2:
def polyTanh216(x):
    return 0.00509292466816206*x

#Chebyshev-l250-d2:
def polyTanh217(x):
    return 0.00599992104316478*x

#numerically-l250-d2:
def polyTanh218(x):
    return 0.0046959750877794*x

#Legendre-l250-d3:
def polyTanh219(x):
    return -1.0864334064983e-7*x**3 + 0.0101855812611289*x

#Chebyshev-l250-d3:
def polyTanh220(x):
    return -1.39988946552193e-7*x**3 + 0.011249506538872*x

#numerically-l250-d3:
def polyTanh221(x):
    return -6.15164424962596e-8*x**3 + 0.00763094157638262*x

#Legendre-l250-d4:
def polyTanh222(x):
    return -1.0864334064983e-7*x**3 + 0.0101855812611289*x

#Chebyshev-l250-d4:
def polyTanh223(x):
    return -1.39988946552193e-7*x**3 + 0.011249506538872*x

#numerically-l250-d4:
def polyTanh224(x):
    return -6.15164424962596e-8*x**3 + 0.00763094157638262*x

#Interval = [-260,260]
#presicion = 10
#Legendre-l260-d2:
def polyTanh225(x):
    return 0.00489704538110002*x

#Chebyshev-l260-d2:
def polyTanh226(x):
    return 0.00576916057689176*x

#numerically-l260-d2:
def polyTanh227(x):
    return 0.00451536066132634*x

#Legendre-l260-d3:
def polyTanh228(x):
    return -9.65839657349109e-8*x**3 + 0.00979385244385483*x

#Chebyshev-l260-d3:
def polyTanh229(x):
    return -1.24450405053981e-7*x**3 + 0.0108168690058812*x

#numerically-l260-d3:
def polyTanh230(x):
    return -5.4687893377565e-8*x**3 + 0.00733744382344491*x

#Legendre-l260-d4:
def polyTanh231(x):
    return -9.65839657349109e-8*x**3 + 0.00979385244385483*x

#Chebyshev-l260-d4:
def polyTanh232(x):
    return -1.24450405053981e-7*x**3 + 0.0108168690058812*x

#numerically-l260-d4:
def polyTanh233(x):
    return -5.4687893377565e-8*x**3 + 0.00733744382344491*x

#Interval = [-270,270]
#presicion = 10
#Legendre-l270-d2:
def polyTanh234(x):
    return 0.00471567541753437*x

#Chebyshev-l270-d2:
def polyTanh235(x):
    return 0.0055554928770741*x

#numerically-l270-d2:
def polyTanh236(x):
    return 0.00434812508127722*x

#Legendre-l270-d3:
def polyTanh237(x):
    return -8.62453151940497e-8*x**3 + 0.0094311380257767*x

#Chebyshev-l270-d3:
def polyTanh238(x):
    return -1.11128990902545e-7*x**3 + 0.0104162749391514*x

#numerically-l270-d3:
def polyTanh239(x):
    return -4.88337354063962e-8*x**3 + 0.00706568664479885*x

#Legendre-l270-d4:
def polyTanh240(x):
    return -8.62453151940497e-8*x**3 + 0.0094311380257767*x

#Chebyshev-l270-d4:
def polyTanh241(x):
    return -1.11128990902545e-7*x**3 + 0.0104162749391514*x

#numerically-l270-d4:
def polyTanh242(x):
    return -4.88337354063962e-8*x**3 + 0.00706568664479885*x

#Interval = [-280,280]
#presicion = 10
#Legendre-l280-d2:
def polyTanh243(x):
    return 0.00454726023608478*x

#Chebyshev-l280-d2:
def polyTanh244(x):
    return 0.0053570866572271*x

#numerically-l280-d2:
def polyTanh245(x):
    return 0.00419283489980304*x

#Legendre-l280-d3:
def polyTanh246(x):
    return -7.73311126601093e-8*x**3 + 0.00909432966050716*x

#Chebyshev-l280-d3:
def polyTanh247(x):
    return -9.96429626121518e-8*x**3 + 0.0100442916185027*x

#numerically-l280-d3:
def polyTanh248(x):
    return -4.37861886845856e-8*x**3 + 0.00681334069319869*x

#Legendre-l280-d4:
def polyTanh249(x):
    return -7.73311126601093e-8*x**3 + 0.00909432966050716*x

#Chebyshev-l280-d4:
def polyTanh250(x):
    return -9.96429626121518e-8*x**3 + 0.0100442916185027*x

#numerically-l280-d4:
def polyTanh251(x):
    return -4.37861886845856e-8*x**3 + 0.00681334069319869*x

#Interval = [-290,290]
#presicion = 10
#Legendre-l290-d2:
def polyTanh252(x):
    return 0.00439045971986152*x

#Chebyshev-l290-d2:
def polyTanh253(x):
    return 0.00517236320880107*x

#numerically-l290-d2:
def polyTanh254(x):
    return 0.00404825438601672*x

#Legendre-l290-d3:
def polyTanh255(x):
    return -6.96042485026292e-8*x**3 + 0.00878074769417333*x

#Chebyshev-l290-d3:
def polyTanh256(x):
    return -8.96868115431637e-8*x**3 + 0.00969795971926911*x

#numerically-l290-d3:
def polyTanh257(x):
    return -3.94109809341977e-8*x**3 + 0.00657839791067493*x

#Legendre-l290-d4:
def polyTanh258(x):
    return -6.96042485026292e-8*x**3 + 0.00878074769417333*x

#Chebyshev-l290-d4:
def polyTanh259(x):
    return -8.96868115431637e-8*x**3 + 0.00969795971926911*x

#numerically-l290-d4:
def polyTanh260(x):
    return -3.94109809341977e-8*x**3 + 0.00657839791067493*x

#Interval = [-300,300]
#presicion = 10
#Legendre-l300-d2:
def polyTanh261(x):
    return 0.00424411370556508*x

#Chebyshev-l300-d2:
def polyTanh262(x):
    return 0.00499995430738699*x

#numerically-l300-d2:
def polyTanh263(x):
    return 0.0039133125731495*x

#Legendre-l300-d3:
def polyTanh264(x):
    return -6.28734412708109e-8*x**3 + 0.00848807099135552*x

#Chebyshev-l300-d3:
def polyTanh265(x):
    return -8.10140763232322e-8*x**3 + 0.00937471442884153*x

#numerically-l300-d3:
def polyTanh266(x):
    return -3.55997931112631e-8*x**3 + 0.00635911798031898*x

#Legendre-l300-d4:
def polyTanh267(x):
    return -6.28734412708109e-8*x**3 + 0.00848807099135552*x

#Chebyshev-l300-d4:
def polyTanh268(x):
    return -8.10140763232322e-8*x**3 + 0.00937471442884153*x

#numerically-l300-d4:
def polyTanh269(x):
    return -3.55997931112631e-8*x**3 + 0.00635911798031898*x


"""
list of all function names
"""
functions = {}

###################################################################

#__this = Functions()
this = sys.modules[ __name ]
objects = keras.utils.generic_utils.get_custom_objects()
for name, data in inspect.getmembers( this, inspect.isfunction ):
    objects[ name ] = data
    functions[ name ] = data
print( 'polynomial functions imported' )

